apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.buildTools
    defaultConfig {
        applicationId "me.kalinski.realnote"
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':utils')
    implementation project(':firebaseauth')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlin_version"
    implementation "org.jetbrains.anko:anko-sdk15:$rootProject.ankoVersion"
    implementation "org.jetbrains.anko:anko-support-v4:$rootProject.ankoVersion"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$rootProject.ankoVersion"

    implementation "com.google.firebase:firebase-core:$rootProject.firebase"
    implementation "com.google.firebase:firebase-auth:$rootProject.firebase"
    implementation "com.google.android.gms:play-services-auth:$rootProject.firebase"

    // Support Libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibrary"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibrary"
    implementation "com.android.support:design:$rootProject.supportLibrary"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibrary"
    implementation "com.android.support:support-v13:$rootProject.supportLibrary"
    implementation "com.android.support:support-v4:$rootProject.supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraint"

    //Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timber"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptor"
    implementation "com.squareup.moshi:moshi:$rootProject.moshi"
    implementation "com.serjltt.moshi:moshi-lazy-adapters:$rootProject.moshiLazy"

    // RxJava & RxAndroid
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid"

    // Dagger 2
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    provided "org.glassfish:javax.annotation:$rootProject.javax"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    implementation "jp.wasabeef:glide-transformations:$rootProject.glideTransform"

    // Test
    testImplementation "junit:junit:$rootProject.junit"
    testImplementation "org.mockito:mockito-core:$rootProject.mockito"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.hamcrest"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espresso"
}
apply plugin: 'com.google.gms.google-services'